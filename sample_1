import pandas as pd
import nltk
from nltk.corpus import words
import re

# Download nltk words corpus (only needed once)
nltk.download('words')
english_words = set(words.words())  # Set of valid English words for lookup

# Add custom words (like medical or industry-specific terms)
custom_words = {'O2', 'APG', 'CLIA'}  # Customize this list
english_words.update(custom_words)

# Read the Excel file
df = pd.read_excel('your_file.xlsx')

# Function to split concatenated uppercase words intelligently
def split_using_dict(value):
    result = ""
    temp_word = ""
    i = 0

    while i < len(value):
        temp_word += value[i]
        # If the current temp_word is a valid English word, add to result
        if temp_word.lower() in english_words or temp_word in custom_words:
            result += temp_word + " "
            temp_word = ""
        i += 1

    # Add remaining characters (if any) to result
    if temp_word:
        result += temp_word

    return result.strip()

# Apply the function to the column you want to format
df['formatted_column'] = df['your_column_name'].apply(lambda x: split_using_dict(x) if isinstance(x, str) else x)

# Save the updated dataframe to a new Excel file
df.to_excel('formatted_file.xlsx', index=False)
