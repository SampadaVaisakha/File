import pandas as pd
import nltk
import re
from nltk.corpus import words

# Download the nltk words corpus if not already
nltk.download('words')

# Load the list of valid English words
valid_words = set(words.words())

# Read the Excel file
file_path = 'path_to_your_excel_file.xlsx'
df = pd.read_excel(file_path)

# Function to split words and handle numbers
def split_into_words(text):
    # Separate trailing digits
    match = re.match(r'([a-zA-Z]+)(\d*)$', text)
    text_part = match.group(1)
    number_part = match.group(2)
    
    result = []
    i = 0
    
    while i < len(text_part):
        match = ''
        # Try longest possible match from current position
        for j in range(len(text_part), i, -1):
            if text_part[i:j] in valid_words:
                match = text_part[i:j]
                result.append(match)
                i = j  # Move index to after the matched part
                break
        
        # If no match, accumulate characters and continue
        if not match:
            result.append(text_part[i])
            i += 1

    # Add the number part if it exists
    if number_part:
        result.append(number_part)
    
    return ' '.join(result)

# Apply the function to the 'values' column
df['split_words'] = df['values'].apply(lambda x: split_into_words(x.lower()))

# Save the updated dataframe to a new Excel file
df.to_excel('output_split_words.xlsx', index=False)

print("Splitting complete. Check 'output_split_words.xlsx'.")
