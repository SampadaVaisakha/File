import pandas as pd
import nltk
import re
from nltk.corpus import words

# Download nltk corpus if not already downloaded
nltk.download('words')

# Load English words from nltk corpus
valid_words = set(words.words())

# Read Excel file
file_path = 'path_to_your_excel_file.xlsx'
df = pd.read_excel(file_path)

# Function to split words and handle alphanumeric cases
def split_into_words(text):
    result = []
    i = 0

    # Regex to separate numbers and letters (e.g., O2saturatedquantity -> ['O', '2', 'saturated', 'quantity'])
    parts = re.findall(r'[A-Za-z]+|\d+', text)
    
    for part in parts:
        # If the part is purely numeric, keep it as is
        if part.isdigit():
            result.append(part)
            continue
        
        # Greedy match for longest word in the alphabetic part
        temp = ''
        j = 0
        while j < len(part):
            match = ''
            # Try longest match from the current position
            for k in range(len(part), j, -1):
                if part[j:k] in valid_words:
                    match = part[j:k]
                    result.append(match)
                    j = k  # Move to the next section after the match
                    break
            
            # If no match is found, keep accumulating characters
            if not match:
                temp += part[j]
                j += 1

        # Add remaining unmatched characters (to avoid single-character splitting)
        if temp:
            result.append(temp)
    
    return ' '.join(result)

# Apply function to the 'values' column
df['split_words'] = df['values'].apply(lambda x: split_into_words(x.lower()))

# Save the updated DataFrame to a new Excel file
df.to_excel('output_split_words.xlsx', index=False)

print("Splitting complete. Check 'output_split_words.xlsx'.")
